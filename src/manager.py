import csv
from src.db import MyDB
import sys
from src.pipes import Source
from src.pipes import Processor
from src.pipes import Writer




def recreate_tables(db):
    db.drop_table("schools")
    db.drop_table("post")
    db.drop_table("topic")

    db.create_table("schools", {"id": "int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY", "URN": "integer NOT NULL"})
                                #"establishment_number": "integer NOT NULL", "establishment_name": "text NOT NULL", "postcode": "text NOT NULL"})
                                #"type_of_establishment": "text NOT NULL", "phase_of_education": "text NOT NULL"})
    db.create_table("post", {"post_id": "int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY", "timestamp": "date",
                             "raw_text": "text", "sentiment": "integer NOT NULL",
                             "school_id": "integer references schools(id)"})
    db.create_table("topic", {"id": "int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY",
                              "school_id": "integer references schools(id)", "topic_description": "text"})
def load_schools_table(db):
    data_table = csv.DictReader(open("data/schools.csv"))
    for row in data_table:
        #print(row["URN"])
        db.add_row("schools", {"URN": row["URN"]})
        #, "establishment_number": row["EstablishmentNumber"], "establishment_name": row["EstablishmentName"], "postcode": row["Postcode"]})
        #"type_of_establishment": row["TypeOfEstablishment (name)"], "phase_of_education": row["PhaseOfEducation (name)"]})


def main():
    db = MyDB("dbname=ana9712 user=ana9712 password=test")
    if sys.argv[1] == "load_schools":
        load_schools_table(db)

    if sys.argv[1] == "recreate_tables":

        recreate_tables(db)
    # src = Source([
    #     Processor(
    #         [Writer(lambda x: db.add_row("reviews", x))],
    #         lambda x: [x, x])],
    #     lambda: [{"raw_text": "this works", "concern_id": 1, "sentiment": 1.4782374, "concerns": "UCL"}]
    # )


if __name__ == '__main__':
    main()
